{"ast":null,"code":"var _jsxFileName = \"/home/andrea/Documentos/TFG/quantum-solver/quantum_solver_web/src/pages/ParamPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = process.env.REACT_APP_API;\nexport function ParamPage() {\n  _s();\n\n  const navigate = useNavigate();\n  const [state, setState] = useState({\n    'params': [],\n    'params_values': ['']\n  });\n\n  const goToMenu = () => {\n    navigate('/menu', {\n      replace: true\n    });\n  };\n\n  useEffect(() => {\n    (async () => {\n      const token = window.sessionStorage.getItem('token') || '';\n      const result = await fetch(`${API}/get-params`, {\n        method: 'GET',\n        headers: {\n          token\n        }\n      });\n      const data = await result.json();\n      setState(data);\n    })();\n  }, []);\n\n  const setParamsValues = async () => {\n    const token = window.sessionStorage.getItem('token') || '';\n    const result = await fetch(`${API}/set-params-values`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        token\n      },\n      body: JSON.stringify({\n        'params_values': state['params_values']\n      })\n    });\n    const data = await result.json();\n    console.log('setParamsValues: ', data);\n\n    if (!data.err) {\n      goToMenu();\n    } else {\n      alert('Error checking parameters: Read carefully the constraints and try again');\n    }\n  };\n\n  const changeParams = event => {\n    state['params_values'][parseInt(event.target.id)] = event.target.value;\n  };\n\n  const getInputs = state['params'].map((item, i) => {\n    let type = '';\n\n    switch (item.type) {\n      case 'int':\n      case 'float':\n        type = 'number';\n        break;\n\n      default:\n        type = 'text';\n        break;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Constraint: \", item.constraint]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: type,\n          id: i.toString(),\n          required: true,\n          onChange: changeParams\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, 'Param' + i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Set Parameters Values\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), getInputs, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      id: \"okBtn\",\n      onClick: setParamsValues,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ParamPage, \"VW3NQghefNA4q7XH7AMFRvv2ID4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ParamPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParamPage\");","map":{"version":3,"sources":["/home/andrea/Documentos/TFG/quantum-solver/quantum_solver_web/src/pages/ParamPage.tsx"],"names":["React","useState","useEffect","useNavigate","API","process","env","REACT_APP_API","ParamPage","navigate","state","setState","goToMenu","replace","token","window","sessionStorage","getItem","result","fetch","method","headers","data","json","setParamsValues","body","JSON","stringify","console","log","err","alert","changeParams","event","parseInt","target","id","value","getInputs","map","item","i","type","description","constraint","toString"],"mappings":"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","sourcesContent":["\nimport React, {useState, useEffect} from 'react';\nimport {useNavigate} from \"react-router-dom\";\n\nconst API = process.env.REACT_APP_API;\n\ntype Param = {\n  'type': string,\n  'description': string,\n  'constraint': string\n};\n\nexport function ParamPage() {\n  const navigate = useNavigate();\n  const [state, setState] = useState({'params': [], 'params_values': ['']});\n  const goToMenu = () => {\n    navigate('/menu', {replace: true});\n  }\n  useEffect(() => {\n    (async () => {\n      const token = window.sessionStorage.getItem('token') || '';\n      const result = await fetch(`${API}/get-params`, {\n        method: 'GET',\n        headers: {token}\n      });\n      const data = await result.json();\n      setState(data);\n    })();\n  }, []);\n  const setParamsValues = async () => {\n    const token = window.sessionStorage.getItem('token') || '';\n    const result = await fetch(`${API}/set-params-values`, {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json', token},\n      body: JSON.stringify({'params_values': state['params_values']})\n    });\n    const data = await result.json();\n    console.log('setParamsValues: ', data);\n    if (!data.err) {\n      goToMenu();\n    } else {\n      alert('Error checking parameters: Read carefully the constraints and try again');\n    }\n  }\n  const changeParams = (event: React.ChangeEvent<HTMLInputElement>) => {\n    state['params_values'][parseInt(event.target.id)] = event.target.value;\n  }\n  const getInputs = state['params'].map((item: Param, i: number) => {\n    let type: string = '';\n    switch (item.type) {\n      case 'int':\n      case 'float':\n        type = 'number';\n        break;\n    \n      default:\n        type = 'text';\n        break;\n    }\n    return (\n      <div key={'Param' + i}>\n        <div><label>{item.description}</label></div>\n        <div><label>Constraint: {item.constraint}</label></div>\n        <div><input type={type} id={i.toString()} required onChange={changeParams}/></div>\n      </div>\n    )\n  });\n  return (\n    <div>\n    <h1>Set Parameters Values</h1>\n    {getInputs} \n    <button className='button' id='okBtn' onClick={setParamsValues}>\n      <span>OK</span>\n    </button>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}