{"ast":null,"code":"var _jsxFileName = \"/home/andrea/Documentos/TFG/quantum-solver/quantum_solver_web/src/pages/AlgorithmPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = process.env.REACT_APP_API;\nexport function AlgorithmPage() {\n  _s();\n\n  const navigate = useNavigate();\n  const [state, setState] = useState({\n    'algorithms': [],\n    'current_algorithm': ''\n  });\n\n  const goToMenu = () => {\n    navigate('/menu', {\n      replace: true\n    });\n  };\n\n  useEffect(() => {\n    (async () => {\n      const token = window.sessionStorage.getItem('token') || '';\n      const result = await fetch(`${API}/get-algorithms`, {\n        method: 'GET',\n        headers: {\n          token\n        }\n      });\n      const data = await result.json();\n      setState(data);\n    })();\n  }, []);\n\n  const selectAlgorithm = event => {\n    state['current_algorithm'] = event.target.value;\n  };\n\n  const setAlgorithm = async () => {\n    const token = window.sessionStorage.getItem('token') || '';\n    const result = await fetch(`${API}/set-algorithm`, {\n      method: 'POST',\n      body: JSON.stringify({\n        'id': state['current_algorithm']\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        token\n      }\n    });\n    const data = await result.json();\n    console.log('setAlgorithm: ', data);\n\n    if (!data.err) {\n      goToMenu();\n    }\n  };\n\n  const getOptions = state['algorithms'].map((item, i) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item.id,\n      children: item.name\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select Algorithm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"algorithms\",\n      onChange: selectAlgorithm,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        hidden: true,\n        children: \"Choose an algorithm here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), getOptions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      id: \"okBtn\",\n      onClick: setAlgorithm,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AlgorithmPage, \"9VPx1JLqBWZ4oDrgoDnWspu+/LY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AlgorithmPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlgorithmPage\");","map":{"version":3,"sources":["/home/andrea/Documentos/TFG/quantum-solver/quantum_solver_web/src/pages/AlgorithmPage.tsx"],"names":["React","useState","useEffect","useNavigate","API","process","env","REACT_APP_API","AlgorithmPage","navigate","state","setState","goToMenu","replace","token","window","sessionStorage","getItem","result","fetch","method","headers","data","json","selectAlgorithm","event","target","value","setAlgorithm","body","JSON","stringify","console","log","err","getOptions","map","item","i","id","name"],"mappings":"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","sourcesContent":["\nimport React, {useState, useEffect} from 'react';\nimport {useNavigate} from \"react-router-dom\";\n\nconst API = process.env.REACT_APP_API;\n\ntype Algorithm = {\n  'id': number,\n  'name': number,\n  'description': number,\n  'parameters': number\n};\n\nexport function AlgorithmPage() {\n  const navigate = useNavigate();\n  const [state, setState] = useState({'algorithms': [], 'current_algorithm': ''});\n  const goToMenu = () => {\n    navigate('/menu', {replace: true});\n  }\n  useEffect(() => { \n    (async () => {\n      const token = window.sessionStorage.getItem('token') || '';\n      const result = await fetch(`${API}/get-algorithms`, {\n        method: 'GET',\n        headers: {token}\n      });\n      const data = await result.json();\n      setState(data);\n    })();\n  }, []);\n  const selectAlgorithm = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    state['current_algorithm'] = event.target.value;\n  }\n  const setAlgorithm = async () => {\n    const token = window.sessionStorage.getItem('token') || '';\n    const result = await fetch(`${API}/set-algorithm`, {\n      method: 'POST',\n      body: JSON.stringify({'id': state['current_algorithm']}),\n      headers: {'Content-Type': 'application/json', token}\n    });\n    const data = await result.json();\n    console.log('setAlgorithm: ', data);\n    if (!data.err) {\n      goToMenu();\n    }\n  }\n  const getOptions = state['algorithms'].map((item: Algorithm, i: number) => {\n    return <option key={i} value={item.id}>\n      {item.name}\n    </option>\n  });\n  return (\n    <div>\n    <h1>Select Algorithm</h1>\n    <select name='algorithms' onChange={selectAlgorithm}>\n      <option value=\"\" hidden>Choose an algorithm here</option>\n      {getOptions} \n    </select>\n    <button className='button' id='okBtn' onClick={setAlgorithm}>\n      <span>OK</span>\n    </button>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}